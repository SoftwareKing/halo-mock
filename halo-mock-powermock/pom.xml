<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.8.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>org.xujin.halo</groupId>
    <artifactId>halo-mock-powermock</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>halo-mock-powermock</name>
    <description>halo-mock-powermock</description>

    <properties>
        <java.version>1.8</java.version>
    </properties>

   <dependencyManagement>
       <dependencies>
           <dependency>
               <groupId>net.sourceforge.cobertura</groupId>
               <artifactId>cobertura</artifactId>
               <version>2.1.1</version>
               <scope>test</scope>
               <exclusions>
                   <exclusion>
                       <groupId>ch.qos.logback</groupId>
                       <artifactId>logback-classic</artifactId>
                   </exclusion>
               </exclusions>
           </dependency>
       </dependencies>
   </dependencyManagement>


    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <!--删除logback配置-->
                <exclusion>
                    <artifactId>spring-boot-starter-logging</artifactId>
                    <groupId>org.springframework.boot</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>2.0.0-beta.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito2</artifactId>
            <version>2.0.0-beta.5</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>2.7</version>
                <executions>
                    <execution>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>cobertura</goal>
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <!-- 设置单测覆盖率输出的位置 -->
                    <outputDirectory>./target/tmpCobertura</outputDirectory>
                    <check>
                        <!--每个类的分支覆盖率-->
                        <branchRate>85</branchRate>
                        <!--每个类的代码行覆盖率-->
                        <lineRate>85</lineRate>
                        <!--校验失败则中止.即为true时如果校验失败则打包执行失败,反之则只是打出告警日志-->
                        <haltOnFailure>true</haltOnFailure>
                        <!--整体的分支覆盖率-->
                        <totalBranchRate>85</totalBranchRate>
                        <!--整体的代码行覆盖率-->
                        <totalLineRate>85</totalLineRate>
                        <!--每个包的分支行覆盖率-->
                        <packageBranchRate>85</packageBranchRate>
                        <!--每个包的代码行覆盖率-->
                        <packageLineRate>85</packageLineRate>
                        <regexes>
                            <!--通过表达式设定覆盖率伐值-->
                            <regex>
                                <pattern>org.xujin.halo.mock.*</pattern>
                                <branchRate>90</branchRate>
                                <lineRate>80</lineRate>
                            </regex>
                        </regexes>
                    </check>
                </configuration>
            </plugin>
        </plugins>

    </build>



</project>
